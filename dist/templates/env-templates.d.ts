/**
 * @fileoverview Environment Variable Templates
 * @description Templates for T3 Env configuration and type-safe environment variables
 * Used to generate env.ts file for runtime environment validation
 */
export declare const envConfigTemplate = "import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    POSTGRES_URL: z.string().url(),\n    AUTH_SECRET: z.string().min(32),\n    STRIPE_SECRET_KEY: z.string().startsWith(\"sk_\"),\n    STRIPE_WEBHOOK_SECRET: z.string().startsWith(\"whsec_\"),\n    NODE_ENV: z.enum([\"development\", \"test\", \"production\"]),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    NEXT_PUBLIC_BASE_URL: z.string().url(),\n    NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: z.string().startsWith(\"pk_\"),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    POSTGRES_URL: process.env.POSTGRES_URL,\n    AUTH_SECRET: process.env.AUTH_SECRET,\n    STRIPE_SECRET_KEY: process.env.STRIPE_SECRET_KEY,\n    STRIPE_WEBHOOK_SECRET: process.env.STRIPE_WEBHOOK_SECRET,\n    NODE_ENV: process.env.NODE_ENV,\n    NEXT_PUBLIC_BASE_URL: process.env.NEXT_PUBLIC_BASE_URL,\n    NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});";
export declare const envExampleTemplate = "# Database\nPOSTGRES_URL=\"postgresql://user:password@localhost:5432/database\"\n\n# Authentication\nAUTH_SECRET=\"your-32-character-secret-key-here-make-it-long-enough\"\n\n# Stripe\nSTRIPE_SECRET_KEY=\"sk_test_your_stripe_secret_key\"\nSTRIPE_WEBHOOK_SECRET=\"whsec_your_webhook_secret\"\n\n# App Configuration\nNEXT_PUBLIC_BASE_URL=\"http://localhost:3000\"\nNEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=\"pk_test_your_stripe_publishable_key\"\n\n# Optional: Skip environment validation during build (useful for Docker)\n# SKIP_ENV_VALIDATION=\"true\"";
export declare const envLocalTemplate = "# This file is automatically created by your MCP\n# Copy this to .env.local and fill in your actual values\n# Never commit .env.local to version control\n\n# Database - Set up your PostgreSQL database\nPOSTGRES_URL=\"postgresql://user:password@localhost:5432/your_db_name\"\n\n# Authentication - Generate a secure secret (32+ characters)\nAUTH_SECRET=\"\"\n\n# Stripe - Get these from your Stripe dashboard\nSTRIPE_SECRET_KEY=\"\"\nSTRIPE_WEBHOOK_SECRET=\"\"\nNEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=\"\"\n\n# App Configuration\nNEXT_PUBLIC_BASE_URL=\"http://localhost:3000\"";
//# sourceMappingURL=env-templates.d.ts.map